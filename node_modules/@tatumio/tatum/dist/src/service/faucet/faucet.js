"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var Faucet_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Faucet = void 0;
const typedi_1 = require("typedi");
const tatum_connector_1 = require("../../connector/tatum.connector");
const util_1 = require("../../util");
const tatum_1 = require("../tatum");
let Faucet = Faucet_1 = class Faucet {
    constructor(id) {
        this.id = id;
        this.connector = typedi_1.Container.of(this.id).get(tatum_connector_1.TatumConnector);
        this.config = typedi_1.Container.of(this.id).get(util_1.CONFIG);
    }
    async fund(address) {
        const chain = this.convertToFaucetChain(this.config.network);
        return util_1.ErrorUtils.tryFail(async () => {
            return this.connector.post({
                path: `faucet/${chain}/${address}`,
            });
        });
    }
    convertToFaucetChain(network) {
        return network === tatum_1.Network.HORIZEN_EON_GOBI ? 'eon-testnet' : network;
    }
};
Faucet = Faucet_1 = __decorate([
    (0, typedi_1.Service)({
        factory: (data) => {
            return new Faucet_1(data.id);
        },
        transient: true,
    }),
    __metadata("design:paramtypes", [String])
], Faucet);
exports.Faucet = Faucet;
//# sourceMappingURL=faucet.js.map