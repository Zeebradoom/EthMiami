import { SolanaRpcSuite, TronRpcSuite, XrpRpcInterface } from '../../dto';
import { EosRpcSuite } from '../../dto/rpc/EosRpcSuite';
import { Address, AddressTezos, AddressTron } from '../address';
import { Faucet } from '../faucet';
import { Ipfs } from '../ipfs';
import { Nft, NftTezos } from '../nft';
import { Notification } from '../notification';
import { Rates } from '../rate';
import { Token } from '../token';
import { TatumSdkChain } from './tatum';
import { BnbRpcSuite } from '../../dto/rpc/BnbRpcSuite';
export declare abstract class BaseOther extends TatumSdkChain {
    ipfs: Ipfs;
    rates: Rates;
    constructor(id: string);
}
export declare class Bnb extends BaseOther {
    rpc: BnbRpcSuite;
    notification: Notification;
    address: Address;
    constructor(id: string);
}
export declare class Xrp extends BaseOther {
    rpc: XrpRpcInterface;
    notification: Notification;
    address: Address;
    constructor(id: string);
}
export declare class Solana extends BaseOther {
    rpc: SolanaRpcSuite;
    notification: Notification;
    address: Address;
    constructor(id: string);
}
export declare class Eos extends BaseOther {
    rpc: EosRpcSuite;
    constructor(id: string);
}
export declare class Tron extends BaseOther {
    notification: Notification;
    rpc: TronRpcSuite;
    address: AddressTron;
    constructor(id: string);
}
export declare class Tezos extends BaseOther {
    notification: Notification;
    address: AddressTezos;
    nft: NftTezos;
    constructor(id: string);
}
export declare class FullSdk extends TatumSdkChain {
    notification: Notification;
    nft: Nft;
    token: Token;
    address: Address;
    rates: Rates;
    faucet: Faucet;
    ipfs: Ipfs;
    constructor(id: string);
}
